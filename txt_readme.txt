LCD 128 x 64 SPI 5V UC1701 5110 Atiny AVR STM32 Arduino Pi Pro FR exp j+0 10150
Référence (SKU) : 10150

Ecran LCD 128x64 pixel, JLX12864G basé sur le contrôleur UC1701X de UltraChip,  datasheet. Cet écran est de type transmissif (FSTN positif) donc lisibilité parfaite mème backlight éteint.

Ce LCD offre un backlight, accepte un VCC 5.0V et comunique par SPI. Deux librairies compatibles avec le chipset UC1701:

dogm128 

u8glib  

Datasheet 

Bonus : sketch Arduino pour une prise en main immédiate sans bibliothèque externe:



LCD 128x64 pixel, JLX12864G based UC1701X controller UltraChip ,  datasheet. This screen is positive type FSTN (so perfect lisibility backlight off ). It offers a backlight, a 5V VCC and communicates via SPI. Two Arduino libraries compatible with the UC1701 chipset :

dogm128 

u8glib  

Datasheet 

Bonus: Arduino example to try it right away :

/*
JLX12864G-086 (Graphic LCD 128x64)
Pin Connect :
CS : 10
RST: 8
RS : 9
SDA: 12
SCK : 13
LEDA : 5
VDD : 5
VSS: GND
*/

const int  csPIN  = 10;  // CS
const int rstPIN  = 8;    // RST
const int  rsPIN  = 9;    // RS
const int sckPIN = 13;  // SCK
const int sdaPIN = 12;  // SDA

unsigned char graphic1[]={
0xf0, 0xf8, 0x6c, 0x6c, 0x6c, 0x78, 0x70, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xf0, 0xf8, 0x6c, 
0x6c, 0x6c, 0x78, 0x70, 0x00, 0x00, 0xf0, 0xf8, 0x0c, 0x0c, 0x9c, 0x98, 0x00, 0x0c, 0xfe, 0xff, 
0x0c, 0x0c, 0x00, 0xf0, 0xf8, 0x9c, 0x0c, 0x9c, 0xf8, 0xf0, 0x00, 0x00, 0xf0, 0xf8, 0x9c, 0x0c, 
0x98, 0xff, 0xff, 0x00, 0x00, 0x88, 0xcc, 0x6c, 0x2c, 0xfc, 0xf8, 0x00, 0x0c, 0xfc, 0xf0, 0x00, 
0xf0, 0xfc, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 
0xe0, 0x30, 0x10, 0x08, 0x0c, 0x04, 0x04, 0x02, 0x06, 0x03, 0x11, 0x41, 0x01, 0x01, 0x01, 0x07, 
0x11, 0x21, 0x41, 0x41, 0x81, 0x81, 0x01, 0x02, 0x82, 0x80, 0x44, 0x1c, 0x08, 0x90, 0x60, 0x20, 
0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 
0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x01, 0x03, 
0x03, 0x03, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 
0x01, 0x03, 0x03, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x01, 0x03, 0x02, 0x00, 0x10, 0x1f, 0x1f, 
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xb8, 0x8c, 0x83, 0x00, 
0x00, 0x03, 0x04, 0x00, 0x88, 0x48, 0x08, 0x28, 0x28, 0x08, 0x04, 0x42, 0x41, 0x80, 0x00, 0x00, 
0xf8, 0x04, 0x02, 0x02, 0x02, 0x02, 0x04, 0x10, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x81, 0x86, 0x88, 
0x88, 0x90, 0x13, 0x14, 0x18, 0x30, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0xfc, 0x04, 0x04, 0x04, 0x04, 0x04, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x08, 0x10, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 
0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x81, 
0x22, 0x20, 0x80, 0x8f, 0x70, 0x20, 0x20, 0x20, 0xe0, 0x10, 0x10, 0x10, 0x10, 0x79, 0x92, 0x00, 
0x08, 0x11, 0x13, 0xd2, 0x12, 0x10, 0x12, 0xe2, 0x21, 0x00, 0x1e, 0x11, 0xe0, 0x20, 0x10, 0x10, 
0x10, 0x00, 0x00, 0x8a, 0x98, 0x70, 0x10, 0x01, 0xe5, 0x06, 0x0c, 0xf0, 0x00, 0x00, 0x00, 0x00, 

0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
0x08, 0x00, 0x00, 0x00, 0x38, 0x44, 0x82, 0x01, 0xf1, 0x11, 0x01, 0x82, 0x44, 0x38, 0x00, 0x00, 
0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xd0, 0x21, 0xe1, 0xf1, 0x0c, 0x86, 
0x83, 0x09, 0x10, 0x21, 0x22, 0x44, 0x48, 0x08, 0xf0, 0x91, 0x0c, 0x04, 0x04, 0x04, 0x03, 0x02, 
0x02, 0x02, 0x83, 0xc3, 0x82, 0x82, 0x03, 0x02, 0x00, 0x04, 0x02, 0x19, 0x78, 0x48, 0x44, 0x44, 
0xd2, 0x32, 0x71, 0x71, 0x38, 0x38, 0x1c, 0x12, 0x09, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0xc4, 0xc5, 0x05, 
0x9e, 0x3e, 0xee, 0x27, 0x46, 0xf7, 0xff, 0xf6, 0xf3, 0x08, 0x00, 0x04, 0x7e, 0xff, 0xe7, 0xfe, 
0xfd, 0x97, 0x83, 0x83, 0xfe, 0xfc, 0xff, 0xfb, 0xff, 0x03, 0x01, 0x01, 0x07, 0x1f, 0x32, 0x8c, 
0x06, 0xfe, 0x27, 0x03, 0x68, 0x1c, 0xcc, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xfe, 0x80, 0x00, 0x84, 0xc2, 0xa2, 
0x92, 0x8c, 0x00, 0x6c, 0x92, 0x92, 0x92, 0x6c, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0x00, 0x78, 
0x94, 0x92, 0x92, 0x60, 0x00, 0x30, 0x28, 0x24, 0xfe, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x47, 0x5e, 0x24, 0xc8, 0x89, 0x9e, 
0x38, 0x01, 0xc7, 0x2e, 0x60, 0xe1, 0xe7, 0x3c, 0x07, 0x00, 0xc0, 0xf0, 0xb8, 0xfc, 0xfc, 0x0c, 
0x0d, 0xfd, 0xf9, 0xe1, 0x81, 0x81, 0x7c, 0x2c, 0x46, 0x46, 0x76, 0x7c, 0x78, 0x80, 0x80, 0x00, 
0x0f, 0xe0, 0x40, 0xdf, 0x0e, 0x00, 0x33, 0x1c, 0xc4, 0x74, 0x3a, 0x0e, 0x86, 0xc2, 0xc2, 0x80, 

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x60, 0xf0, 0xf8, 0x60, 0x60, 0x00, 
0x80, 0xc0, 0x60, 0x60, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x60, 0xe0, 0xc0, 0x00, 
0x00, 0xf8, 0xf8, 0xc0, 0x60, 0x60, 0xe0, 0xc0, 0x00, 0x00, 0xc0, 0xe0, 0x60, 0x60, 0x60, 0x40, 
0x00, 0x60, 0xf0, 0xf8, 0x60, 0x60, 0x00, 0x80, 0xc0, 0x60, 0x60, 0x60, 0xc0, 0x80, 0x00, 0x00, 
0xe0, 0xe0, 0xc0, 0x60, 0xe0, 0xc0, 0x80, 0x00, 0x02, 0x03, 0x01, 0x01, 0x7f, 0xdd, 0xed, 0x6d, 
0x67, 0xe7, 0x67, 0x93, 0x0e, 0x7f, 0x80, 0x00, 0x00, 0x80, 0x9f, 0xff, 0xcd, 0xc3, 0xff, 0x60, 
0xf0, 0xff, 0xd7, 0xff, 0xf8, 0x81, 0xc3, 0x61, 0x64, 0x65, 0xad, 0x2d, 0x6f, 0xc5, 0x80, 0x60, 
0x18, 0x8f, 0xbe, 0x7d, 0x4c, 0x4e, 0x4f, 0x4f, 0xd9, 0xf1, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0x18, 0x18, 0x00, 
0x07, 0x0f, 0x1b, 0x1b, 0x1b, 0x1b, 0x0b, 0x00, 0x00, 0x07, 0x0f, 0x18, 0x18, 0x1c, 0x0c, 0x00, 
0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x09, 0x1b, 0x1b, 0x1b, 0x1f, 0x0e, 
0x00, 0x00, 0x0f, 0x1f, 0x18, 0x18, 0x00, 0x07, 0x0f, 0x1b, 0x1b, 0x1b, 0x1b, 0x0b, 0x00, 0x00, 
0xff, 0xff, 0x0c, 0x18, 0x1c, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x16, 
0x22, 0x22, 0x02, 0x41, 0x61, 0x61, 0x24, 0x85, 0xf3, 0x9b, 0xa0, 0x81, 0x82, 0x9b, 0x8d, 0x84, 
0xb4, 0xd4, 0x80, 0x88, 0xb0, 0xb3, 0xb2, 0x88, 0x1d, 0x0c, 0x4c, 0x54, 0x44, 0x45, 0x47, 0x40, 
0x42, 0x42, 0x03, 0x22, 0x24, 0x24, 0x13, 0x16, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define LCD_C LOW
#define LCD_D HIGH

#define LCD_X 128
#define LCD_Y 64
#define LCD_CMD 0

int a = 0;

void DisplayGraphic1();
void Initial_Lcd();
void clear_screen();
void LcdWrite(byte dc, byte data);

void setup() {
  Initial_Lcd();
  clear_screen();
}

void loop() {
  delay(10);
  DisplayGraphic1(); //display a picture of 128*64 dots
  while(1){;}
}

void Initial_Lcd()
{
  pinMode(csPIN,  OUTPUT);
  pinMode(rstPIN, OUTPUT);
  pinMode(rsPIN,  OUTPUT);
  pinMode(sdaPIN, OUTPUT);
  pinMode(sckPIN, OUTPUT);

  digitalWrite(rstPIN, LOW);
  delay(50);
  digitalWrite(rstPIN, HIGH);
  delay(50);
  LcdWrite(LCD_CMD, 0xe2); // Soft Reset
  LcdWrite(LCD_CMD, 0x2c); // Boost 1
  LcdWrite(LCD_CMD, 0x2e); // Boost 2
  LcdWrite(LCD_CMD, 0x2f); // Boost 3
  LcdWrite(LCD_CMD, 0x23); // Coarse Contrast, setting range is from 20 to 27
  LcdWrite(LCD_CMD, 0x81); // Trim Contrast
  LcdWrite(LCD_CMD, 0x28); // Trim Contrast value range can be set from 0 to 63
  LcdWrite(LCD_CMD, 0xa2); // 1/9 bias ratio
  LcdWrite(LCD_CMD, 0xc8); // Line scan sequence : from top to bottom
  LcdWrite(LCD_CMD, 0xa0); // Column scanning order : from left to right
  LcdWrite(LCD_CMD, 0xaf); // Open the display
}

//===============clear matrix=============
void clear_screen()
{
  unsigned int i,j;
  for(i=0;i<8;i++)
  {
    digitalWrite(csPIN, LOW);
    LcdWrite(LCD_CMD, 0xb0+i);
    LcdWrite(LCD_CMD, 0x10);
    LcdWrite(LCD_CMD, 0x00);
    for(j=0;j<132;j++)
    {
      LcdWrite(LCD_D, 0x00);
    }
  }
}

//==================display 128*64 picture================
void DisplayGraphic1()
{
  unsigned char *address; //pointer
  int i,j;
  address=graphic1; //data pointer:point to "graphic[]",one-dimension array
  for(i=0;i<8;i++)
  {
    digitalWrite(csPIN, LOW);
    LcdWrite(LCD_CMD, 0xb0+i);
    LcdWrite(LCD_CMD, 0x10);
    LcdWrite(LCD_CMD, 0x00);

    for(j=0;j<128;j++)
    {
      LcdWrite(LCD_D, *address);
      address++;
    }
  }
}

void LcdWrite(byte dc, byte data)
{
  digitalWrite(rsPIN, dc);
  digitalWrite(csPIN, LOW);
  shiftOut(sdaPIN, sckPIN, MSBFIRST, data);
  digitalWrite(csPIN, HIGH);
}

